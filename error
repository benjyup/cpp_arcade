==8247== Memcheck, a memory error detector
==8247== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==8247== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==8247== Command: ./arcade lib_arcade_ncurses.so
==8247== 
==8247== Invalid read of size 8
==8247==    at 0x60CBF6C: __gnu_cxx::__normal_iterator<std::shared_ptr<arcade::IObject>*, std::vector<std::shared_ptr<arcade::IObject>, std::allocator<std::shared_ptr<arcade::IObject> > > >::__normal_iterator(std::shared_ptr<arcade::IObject>* const&) (stl_iterator.h:741)
==8247==    by 0x60CB837: std::vector<std::shared_ptr<arcade::IObject>, std::allocator<std::shared_ptr<arcade::IObject> > >::begin() (stl_vector.h:548)
==8247==    by 0x60CA77A: arcade::Window::refresh() (Window.cpp:82)
==8247==    by 0x402594: main (main.cpp:31)
==8247==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8247== 
==8247== 
==8247== Process terminating with default action of signal 11 (SIGSEGV)
==8247==  Access not within mapped region at address 0x0
==8247==    at 0x60CBF6C: __gnu_cxx::__normal_iterator<std::shared_ptr<arcade::IObject>*, std::vector<std::shared_ptr<arcade::IObject>, std::allocator<std::shared_ptr<arcade::IObject> > > >::__normal_iterator(std::shared_ptr<arcade::IObject>* const&) (stl_iterator.h:741)
==8247==    by 0x60CB837: std::vector<std::shared_ptr<arcade::IObject>, std::allocator<std::shared_ptr<arcade::IObject> > >::begin() (stl_vector.h:548)
==8247==    by 0x60CA77A: arcade::Window::refresh() (Window.cpp:82)
==8247==    by 0x402594: main (main.cpp:31)
==8247==  If you believe this happened as a result of a stack
==8247==  overflow in your program's main thread (unlikely but
==8247==  possible), you can try to increase the size of the
==8247==  main thread stack using the --main-stacksize= flag.
==8247==  The main thread stack size used in this run was 8388608.
==8247== 
==8247== HEAP SUMMARY:
==8247==     in use at exit: 206,327 bytes in 345 blocks
==8247==   total heap usage: 376 allocs, 31 frees, 290,789 bytes allocated
==8247== 
==8247== LEAK SUMMARY:
==8247==    definitely lost: 208 bytes in 1 blocks
==8247==    indirectly lost: 5,210 bytes in 6 blocks
==8247==      possibly lost: 1,496 bytes in 1 blocks
==8247==    still reachable: 199,413 bytes in 337 blocks
==8247==         suppressed: 0 bytes in 0 blocks
==8247== Rerun with --leak-check=full to see details of leaked memory
==8247== 
==8247== For counts of detected and suppressed errors, rerun with: -v
==8247== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
